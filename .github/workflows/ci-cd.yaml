name: Backend CI

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch.
 
env:
  # PROJECT_ID: 'your-gcp-project-id' # Update to your Google Cloud project ID
  # REGION: 'your-gcp-region' # Update to your GCP region (e.g., us-central1)
  # GKE_CLUSTER_NAME: 'your-gke-cluster-name' # Update to your GKE cluster name
  # GKE_CLUSTER_REGION: 'your-gke-cluster-region' # Update to your GKE cluster region (or zone if zonal)
  # REPOSITORY: 'backend-image-repo' # Update to your Artifact Registry repository name
  BACKEND_DOCKER_IMAGE_NAME: 'backend-app' # Update to your desired backend image name

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run unit tests
        run: mvn test

      # - name: Get code-coverage report
      #   run: mvn jacoco:report

      # - name: Code Coverage Report
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: Code Coverage Reports
      #     path: target/site/jacoco/index.html

      - name: Build project and package jar
        run: mvn package

      - name: Authenticate to Google Cloud using OIDC
        id: google-auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }} # GitHub secret for WIF provider
          service_account: ${{ secrets.SERVICE_ACCOUNT }} # GitHub secret for WIF service account

      - name: Configure Docker authentication
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          DOCKER_IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.BACKEND_DOCKER_IMAGE_NAME }}:${{ github.sha }}"
          docker build -t $DOCKER_IMAGE .
          docker push $DOCKER_IMAGE

      - name: Save Docker Image Tag as Output
        id: docker-image-output
        run: echo "docker_image_tag=$DOCKER_IMAGE" >> $GITHUB_OUTPUT
        env:
          DOCKER_IMAGE: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.BACKEND_DOCKER_IMAGE_NAME }}:${{ github.sha }}
